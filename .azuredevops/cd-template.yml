parameters:
- name: verbosity
  displayName: 'verbosity of this run'
  type: string
  default: Minimal
  values:
  - Detailed
  - Quiet
  - Diagnostic
  - Minimal
- name: versionSuffixType
  displayName: Nuget Version Suffix Type
  type: string
  default: rc.
  values:
  - rc.
  - beta.
  - alpha.
  - none

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src/dotnet-new-template
      - .azuredevops

pool:
  vmImage: ubuntu-latest

variables:
  sourceDir: 'src/dotnet-new-template'
  dotNetVersion: '8.x'
  buildConfiguration: 'Release'
  nugetServiceConnection: 'TestNuGet - PRI-ConsoleApplicationBuilder'
  majorVersion: '0'
  minorVersion: '1'
  shortVersion: '$(majorVersion).$(minorVersion)'
  patchVersion: $[counter(variables['shortVersion'], 1)]
  versionPrefix: '$(majorVersion).$(minorVersion).$(patchVersion)'
  buildVersionKey: '$(majorVersion).$(minorVersion).$(patchVersion)$(versionSuffixType)'
  buildVersion: $[counter(variables['buildVersionKey'], 1)]
  ${{ if not( eq(parameters['versionSuffixType'], 'none') ) }}:
    versionSuffix: '${{ parameters.versionSuffixType }}$(buildVersion)'
  ${{ else }}:
    versionSuffix: ''
  assemblyVersion: '$(majorVersion).$(minorVersion).$(patchVersion).$(buildVersion)'

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET SDK $(dotNetVersion)'
    inputs:
      packageType: sdk
      version: $(dotNetVersion)

  - task: DotNetCoreCLI@2
    displayName: 'Restore project dependencies'
    inputs:
      command: 'restore'
      projects: '$(sourceDir)/**/*.csproj'
      verbosityRestore: '${{ parameters.verbosity }}'

  - task: DotNetCoreCLI@2
    displayName: 'Pack'
    inputs:
      command: 'pack'
      configuration: '$(buildConfiguration)'
      verbosityPack: '${{ parameters.verbosity }}'
      packagesToPack: '$(sourceDir)/Pri.ConsoleApplicationBuilder.Templates.csproj'
      buildProperties: 'Version=$(assemblyVersion)'

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.ArtifactStagingDirectory)'
      publishLocation: 'pipeline'

  - task: NuGetCommand@2
    displayName: 'NuGet Push'
    inputs:
      command: push
      nuGetFeedType: external
      publishFeedCredentials: $(nugetServiceConnection)